name: CD

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # 환경변수 .env 설정
      - name: Generate Environment Variables File for .env
        run: |
          touch .env
          echo "REACT_APP_ENDPOINT_URL=$REACT_APP_ENDPOINT_URL" >> .env
        env:
          REACT_APP_ENDPOINT_URL: ${{ secrets.REACT_APP_ENDPOINT_URL }}

      # npm 패키지 설치
      - name: Install dependencies
        run: npm install

      # 빌드
      - name: Build
        run: npm run build

      # aws user 연결
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      # 빌드 폴더 s3에 업로드
      - name: S3 Deploy
        run: aws s3 sync ./build s3://${{ secrets.AWS_S3_BUCKET_NAME}}/ --acl bucket-owner-full-control # 현재 build된 폴더에 접근 후 s3 버킷인 web-builder-front-bucket에 파일 업로드

      # 새로 리소스를 업데이트할 때 기존 캐시 무효화
      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID }} --paths "/*"
